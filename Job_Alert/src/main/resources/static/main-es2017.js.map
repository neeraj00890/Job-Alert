{"version":3,"sources":["./projects/job-alert-ui/src/app/app-routing.module.ts","./projects/job-alert-ui/src/app/app.component.ts","./projects/job-alert-ui/src/app/app.component.html","./projects/job-alert-ui/src/app/app.module.ts","./projects/job-alert-ui/src/app/modules/auth/auth.module.ts","./projects/job-alert-ui/src/app/modules/auth/auth.routing.modules.ts","./projects/job-alert-ui/src/app/modules/auth/auth.service.ts","./projects/job-alert-ui/src/app/modules/auth/login/login.component.ts","./projects/job-alert-ui/src/app/modules/auth/login/login.component.html","./projects/job-alert-ui/src/app/modules/auth/signup/signup.component.ts","./projects/job-alert-ui/src/app/modules/auth/signup/signup.component.html","./projects/job-alert-ui/src/app/modules/material/material.module.ts","./projects/job-alert-ui/src/app/navbar/navbar.component.html","./projects/job-alert-ui/src/app/navbar/navbar.component.ts","./projects/job-alert-ui/src/app/services/app.service.ts","./projects/job-alert-ui/src/app/services/common.service.ts","./projects/job-alert-ui/src/app/services/http-interceptor.service.ts","./projects/job-alert-ui/src/app/services/http.service.ts","./projects/job-alert-ui/src/app/services/protect-route.service.ts","./projects/job-alert-ui/src/app/services/user.service.ts","./projects/job-alert-ui/src/environments/environment.ts","./projects/job-alert-ui/src/main.ts","./projects/job-alert-ui/$_lazy_route_resources|lazy|groupOptions: {}|namespace object"],"names":[],"mappings":"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","file":"main-es2017.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProtectRouteService } from './services/protect-route.service';\n\nconst routes: Routes = [\n  {\n    path:'',\n    pathMatch: \"full\",\n    loadChildren: () => import(\"./modules/auth/auth.module\").then(m=>m.AuthModule)\n  },\n  {\n    path:'home',\n    loadChildren: () => import(\"./modules/home/home.module\").then(m=>m.HomeModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n  providers: [ProtectRouteService]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AppService } from './services/app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'job-alert-ui';\n  constructor(public appService: AppService) {}\n}\n","<app-navbar></app-navbar>\n<comp-progress-bar [mode] = \"appService.mode\" [showProgress] = \"appService.showProgressBar\"></comp-progress-bar>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { MaterialModule } from './modules/material/material.module';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpInterceptorService } from './services/http-interceptor.service';\nimport { FabricComponentsUiModule, MaterialComponentsModule } from 'fabric-components-ui';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AuthModule,\n    MaterialModule,\n    HttpClientModule,\n    FabricComponentsUiModule,\n    MaterialComponentsModule\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorService, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRouting } from './auth.routing.modules';\nimport { MaterialModule } from '../material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AuthService } from './auth.service';\nimport { MaterialComponentsModule } from 'fabric-components-ui';\n\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRouting,\n    MaterialModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MaterialComponentsModule\n  ],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule } from \"@angular/router\";\nimport { SignupComponent } from \"./signup/signup.component\";\nimport { LoginComponent } from \"./login/login.component\";\n\nconst routes: Route[] = [\n    {\n        path: 'sign-up',\n        component: SignupComponent\n    },\n    {\n        pathMatch: 'full',\n        path: '',\n        component: LoginComponent\n    }\n]\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ]\n})\nexport class AuthRouting {\n\n}","import { Injectable } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { Login } from '../../types/loginDto';\nimport { Signup } from '../../types/signup';\n\n\n@Injectable()\nexport class AuthService {\n\n  constructor(private httpService: HttpService) {}\n  isUserAuthenticated: boolean = false;\n  \n  registerUser(payload: Signup): Promise<any>  {\n    return this.httpService.post('/signup', payload)\n  }\n\n  loginUser(payload: Login): Promise<any> {\n    return this.httpService.post(\"/authenticate\", payload);\n  }\n\n  isEmailExist(email: string): Promise<any> {\n    return this.httpService.get(`/email-exists?email=${email}`);\n  }\n\n  isUsernameExist(username: string): Promise<any> {\n    return this.httpService.get(`/username-exists?username=${username}`);\n  }\n\n  getSkills(searchText: string = \"\"): Promise<any> {\n    return this.httpService.get(`/skills?searchText=${searchText}`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormGroupDirective, Validators } from '@angular/forms'\nimport { Router } from '@angular/router';\nimport { AppService } from '../../../services/app.service';\nimport { CommonService } from '../../../services/common.service';\nimport { UserService } from '../../../services/user.service';\nimport { Login } from '../../../types/loginDto';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-logIn',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup = new FormGroup({\n    'username': new FormControl(null, [Validators.required]),\n    'password': new FormControl(null, [Validators.required])\n  })\n\n  constructor(private router: Router,\n    private auth: AuthService,\n    private _commonService: CommonService,\n    private _userService: UserService,\n    private _appService: AppService) { }\n\n  ngOnInit() {}\n\n  async onSubmit(formData: FormGroup) {\n      this._appService.showProgress();\n      const loginPayload = formData.value as Login;\n      const response: any = await this.auth.loginUser(loginPayload);\n      this._userService.setUser(response.token);\n      this._appService.hideProgress();\n      this.router.navigate([\"home\"]);\n  }\n\n  checkValidation(input: string) {\n    const validation = this.loginForm.get(input)?.invalid && (this.loginForm.get(input)?.dirty || this.loginForm.get(input)?.touched)\n    return validation;\n  }\n\n  OnRegistrationClick() {\n    this.router.navigate(['sign-up'])\n  }\n\n}\n","<form>\n\t<div class=\"login-container\">\n\t\t<div class=\"login-content\">\n\t\t\t<mat-toolbar class=\"login-toolbar\" color=\"primary\">Recipe Book</mat-toolbar>\n\t\t\t<mat-card>\n\t\t\t\t<form [formGroup]=\"loginForm\">\n\t\t\t\t\t<mat-form-field>\n\t\t\t\t\t\t<mat-icon matPrefix>person_outline</mat-icon>\n\t\t\t\t\t\t<input autofocus type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\n\t\t\t\t\t\t<mat-error *ngIf=\"checkValidation('username')\">\n\t\t\t\t\t\t\tField is Required.\n\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t</mat-form-field>\n\n\t\t\t\t\t<mat-form-field>\n\t\t\t\t\t\t<mat-icon matPrefix>lock_outline</mat-icon>\n\t\t\t\t\t\t<input type=\"password\" autocomplete=\"false\" matInput placeholder=\"Password\"\n\t\t\t\t\t\t\tformControlName=\"password\">\n\t\t\t\t\t\t<mat-error *ngIf=\"checkValidation('password')\">\n\t\t\t\t\t\t\tField is Required.\n\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t</mat-form-field>\n\n\t\t\t\t\t<button type=\"submit\" mat-raised-button color=\"primary\" (click)=\"onSubmit(loginForm)\"\n\t\t\t\t\t\t[disabled]=\"loginForm.invalid\">LOGIN</button>\n\t\t\t\t</form>\n\t\t\t\t<mat-toolbar class=\"login-toolbar\" style=\"background-color:white\">login with</mat-toolbar>\n\t\t\t\t<div class=\"socialMediaFlex\">\n\t\t\t\t\t<button mat-fab color=\"primary\"><i class=\"fab fa-facebook-f\"></i></button>\n\t\t\t\t\t<button mat-fab color=\"accent\"><i class=\"fab fa-google\"></i></button>\n\t\t\t\t</div>\n\t\t\t\t<br>\n\t\t\t\t<span> If You don't have a account yet please <a (click)=\"OnRegistrationClick()\">REGISTER\n\t\t\t\t\t\tHERE</a></span>\n\t\t\t</mat-card>\n\t\t</div>\n\t</div>","import { AfterViewInit } from '@angular/core';\nimport { TemplateRef } from '@angular/core';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { CommonService } from '../../../services/common.service';\nimport { ApiResponse } from '../../../types/api-response';\nimport { AuthService } from '../auth.service';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { ActivatedRoute } from '@angular/router';\nimport { skill } from '../../../types/skill';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, AfterViewInit {\n  @ViewChild(\"signupForm\", { static: false }) signupForm!: TemplateRef<any>;\n  @ViewChild(\"skills\", { static: false }) skills!: TemplateRef<any>;\n  emailregex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  stepperConfig: any;\n  availableSkills: Array<skill> = [];\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  selectedSkill: Array<skill> = [];\n  registerForm: FormGroup = new FormGroup(\n    {\n      'username': new FormControl(null, [Validators.required]),\n      'email': new FormControl(null, [Validators.required, Validators.pattern(this.emailregex)]),\n      'firstname': new FormControl(null, [Validators.required]),\n      'lastname': new FormControl(null, [Validators.required]),\n      'phoneNo': new FormControl(null, [Validators.required]),\n      'password': new FormControl(null, [Validators.required, this.checkPassword]),\n      'role': new FormControl(null, [Validators.required]),\n    }\n  );\n  fieldRequired: string = \"This field is required\"\n  roles: Array<{\n    name: String,\n    label: String,\n  }> = [\n      {\n        label: \"Admin\",\n        name: \"ROLE_ADMIN\",\n      },\n      {\n        label: \"Student\",\n        name: \"ROLE_STUDENT\",\n      }\n    ];\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.stepperConfig = [\n        {\n          stageLabel: \"Personal details\",\n          templateRef: this.signupForm,\n          hasNext: true\n        }, {\n          stageLabel: \"Skills\",\n          templateRef: this.skills,\n          hasPrevious: true\n        }\n      ];\n    }, 0)\n\n  }\n\n  skillControl: FormControl = new FormControl();\n\n  constructor(private auth: AuthService, private _commonService: CommonService, private _router: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.skillControl.valueChanges.pipe(\n      debounceTime(1000)\n    ).subscribe(async (text: string | skill) => {\n      const response: ApiResponse = await this.auth.getSkills(typeof text === \"string\" ? text: text.name);\n      this.availableSkills = response.data;\n    });\n   this.getSkills()\n  }\n\n  async getSkills() {\n    const response: ApiResponse = await this.auth.getSkills();\n    this.availableSkills = response.data;\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.selectedSkill.push(event.option.value as skill);\n    this.skillControl.setValue(\"\");\n  }\n\n  add(event: any) {\n    event.chipInput!.clear();\n    this.skillControl.setValue(null);\n  }\n  \n  removeSkill(skil: skill) {\n    const index = this.selectedSkill.findIndex(skill => skill.id == skil.id);\n    if (index >= 0) {\n      this.selectedSkill.splice(index, 1);\n    }\n  }\n  emaiErrors() {\n    return this.registerForm.get('email')?.hasError('required') ? 'This field is required' :\n      this.registerForm.get('email')?.hasError('pattern') ? 'Not a valid email address' : ''\n  }\n\n  checkPassword(control: FormControl) {\n    let enteredPassword = control.value\n    let passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{6,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { 'requirements': true } : null;\n  }\n\n  getErrorPassword() {\n    return this.registerForm.get('password')?.hasError('required') ? 'This field is required (The password must be at least six characters, one uppercase letter and one number)' :\n      this.registerForm.get('password')?.hasError('requirements') ? 'Password needs to be at least six characters, one uppercase letter and one number' : '';\n  }\n\n  checkValidation(input: string) {\n    const validation = this.registerForm.get(input)?.invalid && (this.registerForm.get(input)?.dirty || this.registerForm.get(input)?.touched)\n    return validation;\n  }\n\n  async isEmailExists() {\n    await this._commonService.functionDebouncer(this.auth.isEmailExist.bind(this.auth))?.(this.registerForm.get('email')?.value);\n  }\n\n  async isUsernameExists() {\n    await this._commonService.functionDebouncer(this.auth.isUsernameExist.bind(this.auth))?.(this.registerForm.get('username')?.value);\n  }\n  async onSubmit(formData: FormGroup) {\n      const response: ApiResponse = await this.auth.registerUser({...formData.value, skills: JSON.stringify(this.selectedSkill)});\n      this._commonService.openSnackBar(response.message);\n  }\n}\n","<comp-stepper [stepperConfig]=\"stepperConfig\">\n  <ng-template #signupForm>\n    <div class=\"login-container signupForm\">\n      <div class=\"login-content\">\n        <mat-toolbar class=\"login-toolbar\" color=\"primary\">REGISTER</mat-toolbar>\n        <mat-card>\n          <form [formGroup]=\"registerForm\" #formDirective=\"ngForm\">\n            <mat-form-field>\n              <mat-icon matPrefix>email</mat-icon>\n              <input autofocus type=\"email\" matInput placeholder=\"Email *\" formControlName=\"email\"\n                (keyup)=\"isEmailExists();\" />\n              <mat-error *ngIf=\"checkValidation('email')\">\n                {{ emaiErrors() }}\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-icon matPrefix>person_outline</mat-icon>\n              <input autofocus type=\"text\" matInput placeholder=\"Username *\" formControlName=\"username\"\n                (keyup)=\"isUsernameExists();\" />\n              <mat-error *ngIf=\"checkValidation('username')\">\n                {{ fieldRequired }}\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-icon matPrefix>person_outline</mat-icon>\n              <input autofocus type=\"text\" matInput placeholder=\"First name *\" formControlName=\"firstname\" />\n              <mat-error *ngIf=\"checkValidation('firstname')\">\n                {{ fieldRequired }}\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n              <mat-icon matPrefix>person_outline</mat-icon>\n              <input autofocus type=\"text\" matInput placeholder=\"Last name *\" formControlName=\"lastname\" />\n              <mat-error *ngIf=\"checkValidation('lastname')\">\n                {{ fieldRequired }}\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n              <mat-icon matPrefix>person_outline</mat-icon>\n              <input autofocus type=\"text\" matInput placeholder=\"Phone number *\" formControlName=\"phoneNo\" />\n              <mat-error *ngIf=\"checkValidation('phoneNo')\">\n                {{ fieldRequired }}\n              </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n              <mat-icon matPrefix>lock_outline</mat-icon>\n              <input type=\"password\" autocomplete=\"false\" matInput placeholder=\"Password *\"\n                formControlName=\"password\" />\n              <mat-error *ngIf=\"checkValidation('password')\">\n                {{ getErrorPassword() }}\n              </mat-error>\n            </mat-form-field>\n\n            <mat-form-field>\n              <mat-label>Register as:</mat-label>\n              <mat-select formControlName=\"role\">\n                <mat-option *ngFor=\"let role of roles\" [value]=\"role.name\">\n                  {{role.label}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </form>\n        </mat-card>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template #skills>\n    <mat-form-field class=\"example-chip-list\" appearance=\"fill\">\n      <mat-label>Skill Set</mat-label>\n      <mat-chip-list #chipList aria-label=\"Skill selection\">\n        <mat-chip *ngFor=\"let skill of selectedSkill\" selectable=\"true\" removable=\"true\"\n          (removed)=\"removeSkill(skill)\">\n          {{skill.name}}\n          <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n        <input placeholder=\"New skill...\"   (matChipInputTokenEnd)=\"add($event)\" [formControl]=\"skillControl\" [matAutocomplete]=\"auto\"\n          [matChipInputFor]=\"chipList\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n          >\n      </mat-chip-list>\n      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\n        <mat-option *ngFor=\"let skill of availableSkills\" [value]=\"skill\">\n          {{skill.name}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </ng-template>\n</comp-stepper>\n\n<div class=\"socialMediaFlex\">\n  <button style=\"width: 50%\" (click) = \"onSubmit(registerForm)\" [disabled]=\"registerForm.invalid\" type=\"submit\" mat-raised-button\n    color=\"primary\">\n    Submit\n  </button>\n</div>\n<br>","\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport { NgModule } from '@angular/core';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ],\n  exports:[\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule { }\n","\n<mat-toolbar color=\"primary\">\n    <mat-toolbar-row> <h3>Job Portal</h3></mat-toolbar-row>\n   \n    <mat-toolbar-row >\n         <span class=\"spacer\"></span>\n      <div>\n        <ng-template [ngIf] = \"true\">  \n          <button mat-raised-button color=\"primary\" routerLink =\"\" routerLinkActive=\"active\" *ngIf= \"!_userService.user.isAuthenticated\">LogIn</button>\n          <button mat-raised-button color=\"primary\" routerLink =\"/sign-up\" routerLinkActive=\"active\" *ngIf= \"!_userService.user.isAuthenticated\">Register</button>\n          <button mat-raised-button color=\"primary\" routerLinkActive=\"active\" *ngIf= \"_userService.user.isAuthenticated\" (click) = \"logoutUser()\">logout</button>\n        </ng-template>\n       <button mat-raised-button color=\"primary\"  *ngIf=\"false\">Logout</button>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../services/common.service';\nimport { UserService } from '../services/user.service';\nimport { User } from '../types/user';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  constructor(public _userService: UserService, private _router: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  logoutUser() {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n    this._router.navigate([\"/\"]);\n    window.location.reload();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ProgressBarMode } from '@angular/material/progress-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  constructor() { }\n  showProgressBar: boolean = false;\n  mode: ProgressBarMode = \"indeterminate\";\n\n  showProgress(mode: ProgressBarMode = \"indeterminate\") {\n    this.mode = mode;\n    this.showProgressBar = true;\n  }\n\n  hideProgress() {\n    this.showProgressBar = false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { User } from '../types/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  constructor(private _matSnackBar: MatSnackBar) { }\n  timer: any;\n\n  openSnackBar(message: string, action: string = \"OK\", duration: number = 3000): void {\n    this._matSnackBar.open(message, action, { duration });\n  }\n\n  functionDebouncer(targetFuntion: Function, delay: number = 1000): Function {\n    return (...args: any) => {\n      return new Promise((resolve, reject) => {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(async () => {\n          resolve(await targetFuntion.apply(this, args));\n        }, delay);\n      });\n    };\n  }\n\n  decodeToken(token: string): User {\n    return JSON.parse(atob(token.split(\".\")[1])) as User;\n  } \n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n  \n  constructor() { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const colnedReq  = req.clone({\n      url: req.url,\n      setHeaders: {\n        \"Authorization\": localStorage.getItem(\"token\") ? `Bearer ${localStorage.getItem(\"token\")}`: \"\"\n      }\n    });\n    return next.handle(colnedReq)\n  }\n}\n","import { HttpClient, HttpClientModule, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { map, catchError } from 'rxjs/operators';\nimport { AppService } from './app.service';\nimport { CommonService } from './common.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private httpClient: HttpClient, private appService: AppService, private commonService: CommonService) {}\n\n  get(url: string, headers: HttpHeaders = new HttpHeaders()): Promise<any> {\n   return this.httpClient.get(environment.baseUrl + url, {\n      headers: headers\n    }).pipe(\n      catchError((error) => {\n        this.appService.hideProgress();\n        this.commonService.openSnackBar(error.error.message);\n        return null;\n\n      })\n    ).toPromise();\n  }\n\n  post(url: string, payload: any, headers: HttpHeaders = new HttpHeaders()): Promise<any> {\n    headers.set('content-type', 'application/json');\n   return this.httpClient.post(environment.baseUrl + url, payload, {\n      headers: headers\n    }).pipe(\n      catchError((error) => {\n        this.appService.hideProgress();\n        this.commonService.openSnackBar(error.error.message);\n        return null;\n\n      })\n    ).toPromise();\n  }\n\n  put(url: string, payload: any, headers: HttpHeaders): Promise<any> {\n    return this.httpClient.put(environment.baseUrl + url, payload, {\n      headers: headers\n    }).pipe(\n      catchError((error) => {\n        this.appService.hideProgress();\n        this.commonService.openSnackBar(error.error.message);\n        return null;\n\n      })\n    ).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { User } from '../types/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProtectRouteService implements CanActivate {\n\n  constructor(private router: Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    const user: User = JSON.parse(localStorage.getItem('user') || \"{}\") ;\n     if(user.isAuthenticated) return true;\n     else {\n       this.router.navigate([\"/\"])\n       return false;\n     }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../types/user';\nimport { CommonService } from './common.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private _commonService: CommonService) { }\n\n  setUser(token: string) {\n    const user = this._commonService.decodeToken(token);\n    user.token = token;\n    user.isAuthenticated = true;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    localStorage.setItem(\"token\", token);\n  }\n\n  get user(): User {\n    return JSON.parse(localStorage.getItem(\"user\") || \"{}\") as User;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 4600;\nmodule.exports = webpackEmptyAsyncContext;"],"sourceRoot":"webpack:///"}