{"version":3,"sources":["./src/app/modules/auth/auth.routing.modules.ts","./src/app/modules/auth/signup/signup.component.ts","./src/app/modules/auth/signup/signup.component.html","./src/app/modules/auth/auth.module.ts","./src/app/services/http-interceptor.service.ts","./src/app/modules/auth/login/login.component.ts","./src/app/modules/auth/login/login.component.html","./src/app/modules/material/material.module.ts","./src/environments/environment.ts","./src/app/services/http.service.ts","./src/app/services/common.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modules/auth/auth.service.ts","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule } from \"@angular/router\";\nimport { SignupComponent } from \"./signup/signup.component\";\nimport { LoginComponent } from \"./login/login.component\";\n\nconst routes: Route[] = [\n    {\n        path: 'sign-up',\n        component: SignupComponent\n    },\n    {\n        pathMatch: 'full',\n        path: '',\n        component: LoginComponent\n    }\n]\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ]\n})\nexport class AuthRouting {\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { CommonService } from 'src/app/services/common.service';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  constructor(private auth: AuthService, private _commonService: CommonService) { }\n  \n  emailregex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  registerForm: FormGroup = new FormGroup(\n    {\n      'username': new FormControl(null, [Validators.required]),\n      'email': new FormControl(null, [Validators.required, Validators.pattern(this.emailregex)]),\n      'firstname': new FormControl(null, [Validators.required]),\n      'lastname': new FormControl(null, [Validators.required]),\n      'phoneNo': new FormControl(null, [Validators.required]),\n      'password': new FormControl(null, [Validators.required, this.checkPassword]),\n      'role': new FormControl(null, [Validators.required]),\n    }\n  );\n  fieldRequired: string = \"This field is required\"\n  roles: Array<{\n    name: String,\n    label: String,\n  }> = [\n      {\n        label: \"Admin\",\n        name: \"ROLE_ADMIN\",\n      },\n      {\n        label: \"Student\",\n        name: \"ROLE_STUDENT\",\n      }\n    ];\n\n  ngOnInit() {\n  }\n\n  emaiErrors() {\n    return this.registerForm.get('email')?.hasError('required') ? 'This field is required' :\n      this.registerForm.get('email')?.hasError('pattern') ? 'Not a valid emailaddress' : ''\n  }\n\n  checkPassword(control: FormControl) {\n    let enteredPassword = control.value\n    let passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{6,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { 'requirements': true } : null;\n  }\n\n  getErrorPassword() {\n    return this.registerForm.get('password')?.hasError('required') ? 'This field is required (The password must be at least six characters, one uppercase letter and one number)' :\n      this.registerForm.get('password')?.hasError('requirements') ? 'Password needs to be at least six characters, one uppercase letter and one number' : '';\n  }\n\n  checkValidation(input: string) {\n    const validation = this.registerForm.get(input)?.invalid && (this.registerForm.get(input)?.dirty || this.registerForm.get(input)?.touched)\n    return validation;\n  }\n\n  async onSubmit(formData: FormGroup, formDirective: FormGroupDirective) {\n    try {\n      await this.auth.registerUser(formData.value)\n    } catch (error) {\n      this._commonService.openSnackBar(error.error.message);\n    }\n  }\n}\n","<div class=\"login-container\">\n  <div class=\"login-content\">\n    <mat-toolbar class=\"login-toolbar\" color=\"primary\">REGISTER</mat-toolbar>\n    <mat-card>\n      <form [formGroup]=\"registerForm\" #formDirective=\"ngForm\" (ngSubmit)=\"onSubmit(registerForm, formDirective)\">\n        <mat-form-field>\n          <mat-icon matPrefix>email</mat-icon>\n          <input autofocus type=\"email\" matInput placeholder=\"Email *\" formControlName=\"email\" />\n          <mat-error *ngIf=\"checkValidation('email')\">\n            {{ emaiErrors() }}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-icon matPrefix>person_outline</mat-icon>\n          <input autofocus type=\"text\" matInput placeholder=\"Username *\" formControlName=\"username\" />\n          <mat-error *ngIf=\"checkValidation('username')\">\n            {{ fieldRequired }}\n          </mat-error>\n        </mat-form-field>\n\n\n        <mat-form-field>\n          <mat-icon matPrefix>person_outline</mat-icon>\n          <input autofocus type=\"text\" matInput placeholder=\"First name *\" formControlName=\"firstname\" />\n          <mat-error *ngIf=\"checkValidation('firstname')\">\n            {{ fieldRequired }}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-icon matPrefix>person_outline</mat-icon>\n          <input autofocus type=\"text\" matInput placeholder=\"Last name *\" formControlName=\"lastname\" />\n          <mat-error *ngIf=\"checkValidation('lastname')\">\n            {{ fieldRequired }}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-icon matPrefix>person_outline</mat-icon>\n          <input autofocus type=\"text\" matInput placeholder=\"Phone number *\" formControlName=\"phoneNo\" />\n          <mat-error *ngIf=\"checkValidation('phoneNo')\">\n            {{ fieldRequired }}\n          </mat-error>\n        </mat-form-field>\n\n\n\n        <mat-form-field>\n          <mat-icon matPrefix>lock_outline</mat-icon>\n          <input type=\"password\" autocomplete=\"false\" matInput placeholder=\"Password *\" formControlName=\"password\" />\n          <mat-hint>Choose a password of at least eight characters, one uppercase\n            letter and one number</mat-hint>\n          <mat-error *ngIf=\"checkValidation('password')\">\n            {{ getErrorPassword() }}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Register as:</mat-label>\n          <mat-select formControlName=\"role\">\n            <mat-option *ngFor=\"let role of roles\" [value]=\"role.name\">\n              {{role.label}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n\n        <hr />\n        <div class=\"socialMediaFlex\">\n          <button style=\"width: 50%\" [disabled]=\"registerForm.invalid\" type=\"submit\" mat-raised-button color=\"primary\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </mat-card>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRouting } from './auth.routing.modules';\nimport { MaterialModule } from '../material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AuthService } from './auth.service';\n\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRouting,\n    MaterialModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n  \n  constructor() { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const colnedReq  = req.clone({\n      url: req.url,\n      setHeaders: {\n        \"Authorization\": localStorage.getItem(\"token\") ? `Bearer ${localStorage.getItem(\"token\")}`: \"\";\n      }\n    });\n    return next.handle(colnedReq)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormGroupDirective, Validators } from '@angular/forms'\nimport { Router } from '@angular/router';\nimport { CommonService } from 'src/app/services/common.service';\nimport { Login } from 'src/app/types/loginDto';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-logIn',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup = new FormGroup({\n    'username': new FormControl(null, [Validators.required]),\n    'password': new FormControl(null, [Validators.required])\n  })\n\n  constructor(private router: Router,\n    private auth: AuthService,\n    private _commonService: CommonService) { }\n\n  ngOnInit() {\n  }\n\n  async onSubmit(formData: FormGroup) {\n    try {\n      const loginPayload = formData.value as Login;\n      const response: any = await this.auth.loginUser(loginPayload);\n      localStorage.setItem(\"token\", response.token);\n      this.router.navigate([\"home\"]);\n    } catch (error) {\n      this._commonService.openSnackBar(error.error.message);\n    }\n  }\n\n  checkValidation(input: string) {\n    const validation = this.loginForm.get(input)?.invalid && (this.loginForm.get(input)?.dirty || this.loginForm.get(input)?.touched)\n    return validation;\n  }\n\n  OnRegistrationClick() {\n    this.router.navigate(['sign-up'])\n  }\n\n}\n","<form>\n\t<div class=\"login-container\">\n\t\t<div class=\"login-content\">\n\t\t\t<mat-toolbar class=\"login-toolbar\" color=\"primary\">Recipe Book</mat-toolbar>\n\t\t\t<mat-card>\n\t\t\t\t<form [formGroup]=\"loginForm\">\n\t\t\t\t\t<mat-form-field>\n\t\t\t\t\t\t<mat-icon matPrefix>person_outline</mat-icon>\n\t\t\t\t\t\t<input autofocus type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\n\t\t\t\t\t\t<mat-error *ngIf=\"checkValidation('username')\">\n\t\t\t\t\t\t\tField is Required.\n\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t</mat-form-field>\n\n\t\t\t\t\t<mat-form-field>\n\t\t\t\t\t\t<mat-icon matPrefix>lock_outline</mat-icon>\n\t\t\t\t\t\t<input type=\"password\" autocomplete=\"false\" matInput placeholder=\"Password\"\n\t\t\t\t\t\t\tformControlName=\"password\">\n\t\t\t\t\t\t<mat-error *ngIf=\"checkValidation('password')\">\n\t\t\t\t\t\t\tField is Required.\n\t\t\t\t\t\t</mat-error>\n\t\t\t\t\t</mat-form-field>\n\n\t\t\t\t\t<button type=\"submit\" mat-raised-button color=\"primary\" (click)=\"onSubmit(loginForm)\"\n\t\t\t\t\t\t[disabled]=\"loginForm.invalid\">LOGIN</button>\n\t\t\t\t</form>\n\t\t\t\t<mat-toolbar class=\"login-toolbar\" style=\"background-color:white\">login with</mat-toolbar>\n\t\t\t\t<div class=\"socialMediaFlex\">\n\t\t\t\t\t<button mat-fab color=\"primary\"><i class=\"fab fa-facebook-f\"></i></button>\n\t\t\t\t\t<button mat-fab color=\"accent\"><i class=\"fab fa-google\"></i></button>\n\t\t\t\t</div>\n\t\t\t\t<br>\n\t\t\t\t<span> If You don't have a account yet please <a (click)=\"OnRegistrationClick()\">REGISTER\n\t\t\t\t\t\tHERE</a></span>\n\t\t\t</mat-card>\n\t\t</div>\n\t</div>","\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport { NgModule } from '@angular/core';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ],\n  exports:[\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpClientModule, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private httpClient: HttpClient) {}\n\n  get(url: string, headers: HttpHeaders = new HttpHeaders()): Promise<any> {\n   return this.httpClient.get(environment.baseUrl + url, {\n      headers: headers\n    }).toPromise();\n  }\n\n  post(url: string, payload: any, headers: HttpHeaders = new HttpHeaders()): Promise<any> {\n    headers.set('content-type', 'application/json');\n   return this.httpClient.post(environment.baseUrl + url, payload, {\n      headers: headers\n    }).toPromise();\n  }\n\n  put(url: string, payload: any, headers: HttpHeaders): Promise<any> {\n    return this.httpClient.put(environment.baseUrl + url, payload, {\n      headers: headers\n    }).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  constructor(private _matSnackBar: MatSnackBar) { }\n\n  openSnackBar(message: string, action: string = \"OK\", duration: number = 3000): void {\n    this._matSnackBar.open(message, action, { duration });\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'job-alert-ui';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { MaterialModule } from './modules/material/material.module';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpInterceptorService } from './services/http-interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AuthModule,\n    MaterialModule,\n    HttpClientModule\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorService, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpService } from 'src/app/services/http.service';\nimport { Login } from 'src/app/types/loginDto';\nimport { Signup } from 'src/app/types/signup';\n\n\n@Injectable()\nexport class AuthService {\n\n  constructor(private httpService: HttpService) {\n\n  }\n\n  registerUser(payload: Signup): Promise<any>  {\n    return this.httpService.post('/signup', payload)\n  }\n\n  loginUser(payload: Login): Promise<any> {\n    return this.httpService.post(\"/authenticate\", payload);\n  }\n}\n","\n<mat-toolbar color=\"primary\">\n    <mat-toolbar-row> <h3>Recipe Book</h3></mat-toolbar-row>\n   \n    <mat-toolbar-row >\n        <button mat-raised-button color=\"primary\"  routerLinkActive=\"active\">Angular-Material</button>\n      \n         <span class=\"spacer\"></span>\n      <div>\n        <ng-template [ngIf] = \"true\">  \n          <button mat-raised-button color=\"primary\" routerLink =\"\" routerLinkActive=\"active\" >LogIn</button>\n          <button mat-raised-button color=\"primary\" routerLink =\"/sign-up\" routerLinkActive=\"active\">Register</button>\n        </ng-template>\n       <button mat-raised-button color=\"primary\"  *ngIf=\"false\">Logout</button>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path:'',\n    pathMatch: \"full\",\n    loadChildren: () => import(\"./modules/auth/auth.module\").then(m=>m.AuthModule)\n  },\n  {\n    path:'home',\n    loadChildren: () => import(\"./modules/home/home.module\").then(m=>m.HomeModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}